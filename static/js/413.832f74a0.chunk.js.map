{"version":3,"file":"static/js/413.832f74a0.chunk.js","mappings":"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","sources":["webpack://project-kapusta/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginDiv\":\"Login_loginDiv__hxjr9\",\"loginParagraph\":\"Login_loginParagraph__VIVdY\",\"loginFormDiv\":\"Login_loginFormDiv__whEDz\",\"loginLabel\":\"Login_loginLabel__eAV7X\",\"loginInput\":\"Login_loginInput__CQRqV\",\"registerButtonForm\":\"Login_registerButtonForm__zgjrz\",\"active\":\"Login_active__v1yrc\",\"buttonContainer\":\"Login_buttonContainer__iGXx3\",\"inputError\":\"Login_inputError__96Rzv\",\"errorText\":\"Login_errorText__gE631\",\"errorAsterisk\":\"Login_errorAsterisk__0sT0P\"};","import styles from './Login.module.css';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../../redux/authorization/operations';\n\nconst Login = () => {\n  const [active, setActive] = useState(true);\n  const [state, setState] = useState({ email: '', password: '' });\n  const [errors, setErrors] = useState({ email: '', password: '' });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isLoading, error } = useSelector(state => state.auth);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n\n    if (value) {\n      setErrors(prevErrors => ({ ...prevErrors, [name]: '' }));\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newErrors = {};\n    if (!state.email) newErrors.email = 'This is a required field';\n    if (!state.password) newErrors.password = 'This is a required field';\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    dispatch(loginUser(state));\n  };\n\n  const handleRegistrationRedirect = () => {\n    navigate('/register');\n  };\n\n  return (\n    <div>\n      <div className={styles.loginDiv}>\n        <form onSubmit={handleSubmit}>\n          <p className={styles.loginParagraph}>\n            Run this pls Log in using an email and password, after registering:\n          </p>\n\n          {/* Wyświetlanie błędów logowania */}\n          {error && <p className={styles.errorText}>{error.message}</p>}\n\n          <div className={styles.loginFormDiv}>\n            <label htmlFor=\"email\" className={styles.loginLabel}>\n              {errors.email && <span className={styles.errorAsterisk}>*</span>} Email:\n            </label>\n            <input\n              autoComplete=\"email\"\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n              className={`${styles.loginInput} ${errors.email ? styles.inputError : ''}`}\n            />\n            {errors.email && <p className={styles.errorText}>{errors.email}</p>}\n          </div>\n\n          <div className={styles.loginFormDiv}>\n            <label htmlFor=\"password\" className={styles.loginLabel}>\n              {errors.password && <span className={styles.errorAsterisk}>*</span>} Password:\n            </label>\n            <input\n              autoComplete=\"current-password\"\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              className={`${styles.loginInput} ${errors.password ? styles.inputError : ''}`}\n            />\n            {errors.password && <p className={styles.errorText}>{errors.password}</p>}\n          </div>\n\n          <div className={styles.buttonContainer}>\n            <button\n              type=\"submit\"\n              className={`${styles.registerButtonForm}\n              ${active && styles.active}\n              ${isLoading ? styles.loading : ''}`}\n              disabled={isLoading} // Zablokowanie przycisku, gdy ładowanie jest w toku\n            >\n              {isLoading ? 'Loading...' : 'Log in'}\n            </button>\n            <button\n              type=\"button\"\n              className={styles.registerButtonForm}\n              onClick={handleRegistrationRedirect}\n              onMouseEnter={() => setActive(false)}\n              onMouseLeave={() => setActive(true)}\n            >\n              Registration\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Login from '../components/Login/Login';\n\nconst LoginPage = () => {\n  return <Login />;\n};\n\nexport default LoginPage;\n"],"names":["Login","active","setActive","useState","state","setState","email","password","errors","setErrors","dispatch","useDispatch","navigate","useNavigate","isLoading","error","useSelector","auth","handleChange","e","name","value","target","prevState","prevErrors","_jsx","children","className","styles","loginDiv","_jsxs","onSubmit","async","preventDefault","newErrors","Object","keys","length","loginUser","loginParagraph","errorText","message","loginFormDiv","htmlFor","loginLabel","errorAsterisk","autoComplete","type","id","onChange","placeholder","loginInput","inputError","buttonContainer","registerButtonForm","loading","disabled","onClick","handleRegistrationRedirect","onMouseEnter","onMouseLeave","LoginPage"],"sourceRoot":""}