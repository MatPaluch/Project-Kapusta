{"version":3,"file":"static/js/610.02354f8d.chunk.js","mappings":"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","sources":["webpack://project-kapusta/./src/components/Register/Register.module.css?88e5","components/Register/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerDiv\":\"Register_registerDiv__TODJs\",\"registerParagraph\":\"Register_registerParagraph__OwLFi\",\"formRegisterDiv\":\"Register_formRegisterDiv__KPgi3\",\"registerLabelName\":\"Register_registerLabelName__6WiXW\",\"registerInputName\":\"Register_registerInputName__oJSkS\",\"registerButtonForm\":\"Register_registerButtonForm__CoZMp\",\"active\":\"Register_active__L0rox\",\"buttonContainer\":\"Register_buttonContainer__iI9bU\",\"errorAsterisk\":\"Register_errorAsterisk__S3xxs\",\"inputError\":\"Register_inputError__-DDf0\",\"errorText\":\"Register_errorText__XHYOx\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './Register.module.css';\nimport { registerUser } from '../../redux/authorization/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Register = () => {\n  // Stany na pola i błędy\n  const [formValues, setFormValues] = useState({ username: '', email: '', password: '' });\n  const [errors, setErrors] = useState({ username: '', email: '', password: '' }); // Stan na błędy\n  const [active, setActive] = useState(true);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormValues(prevState => ({ ...prevState, [name]: value }));\n\n    // Resetowanie błędu przy wpisywaniu danych\n    if (value) {\n      setErrors(prevErrors => ({ ...prevErrors, [name]: '' }));\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Walidacja formularza\n    const newErrors = {};\n    if (!formValues.username) newErrors.username = 'This is a required field';\n    if (!formValues.email) newErrors.email = 'This is a required field';\n    if (!formValues.password) newErrors.password = 'This is a required field';\n\n    // Jeśli są błędy, ustawiamy je w stanie\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    // Wysyłanie danych do API\n    const resFromRegisterRequest = new Promise((resolve, reject) => {\n      dispatch(registerUser(formValues)).then(response => {\n        if (response.error) {\n          reject(response.payload.message);\n        } else {\n          resolve(response.payload.message);\n        }\n      });\n    });\n\n    toast.promise(resFromRegisterRequest, {\n      pending: 'Please wait ...',\n      success: {\n        render({ data }) {\n          navigate('/login');\n          return `${data}`;\n        },\n      },\n      error: {\n        render({ data }) {\n          return `Error ${data}`;\n        },\n      },\n    });\n  };\n\n  const handleLoginRedirect = () => {\n    navigate('/login');\n  };\n\n  return (\n    <div className={styles.registerDiv}>\n      <form onSubmit={handleSubmit}>\n        <p className={styles.registerParagraph}>You can register with your e-mail and password:</p>\n\n        <div className={styles.formRegisterDiv}>\n          <label htmlFor=\"name\" className={styles.registerLabelName}>\n            {errors.username && <span className={styles.errorAsterisk}>*</span>} Name:\n          </label>\n          <input\n            autoComplete=\"username\"\n            type=\"text\"\n            id=\"name\"\n            name=\"username\"\n            value={formValues.username}\n            onChange={handleChange}\n            placeholder=\"Name\"\n            className={`${styles.registerInputName} ${errors.username ? styles.inputError : ''}`}\n          />\n          {/* Wyświetlanie błędu jeśli pole nie zostało wypełnione */}\n          {errors.username && <p className={styles.errorText}>{errors.username}</p>}\n        </div>\n\n        <div className={styles.formRegisterDiv}>\n          <label htmlFor=\"email\" className={styles.registerLabelName}>\n            {errors.email && <span className={styles.errorAsterisk}>*</span>} E-mail:\n          </label>\n          <input\n            autoComplete=\"email\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formValues.email}\n            onChange={handleChange}\n            placeholder=\"Email\"\n            className={`${styles.registerInputName} ${errors.email ? styles.inputError : ''}`}\n          />\n          {errors.email && <p className={styles.errorText}>{errors.email}</p>}\n        </div>\n\n        <div className={styles.formRegisterDiv}>\n          <label htmlFor=\"password\" className={styles.registerLabelName}>\n            {errors.password && <span className={styles.errorAsterisk}>*</span>} Password:\n          </label>\n          <input\n            autoComplete=\"current-password\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formValues.password}\n            onChange={handleChange}\n            placeholder=\"Password\"\n            className={`${styles.registerInputName} ${errors.password ? styles.inputError : ''}`}\n          />\n          {errors.password && <p className={styles.errorText}>{errors.password}</p>}\n        </div>\n\n        <div className={styles.buttonContainer}>\n          <button\n            type=\"button\"\n            className={styles.registerButtonForm}\n            onClick={handleLoginRedirect}\n            onMouseEnter={() => setActive(false)}\n            onMouseLeave={() => setActive(true)}\n          >\n            Log in\n          </button>\n          <button\n            type=\"submit\"\n            className={`${styles.registerButtonForm} ${active && styles.active}`}\n          >\n            Registration\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import Register from 'components/Register/Register';\n\nconst RegisterPage = () => {\n  return <Register />;\n};\nexport default RegisterPage;\n"],"names":["Register","formValues","setFormValues","useState","username","email","password","errors","setErrors","active","setActive","dispatch","useDispatch","navigate","useNavigate","handleChange","e","name","value","target","prevState","prevErrors","_jsx","className","styles","children","_jsxs","onSubmit","async","preventDefault","newErrors","Object","keys","length","resFromRegisterRequest","Promise","resolve","reject","registerUser","then","response","error","payload","message","toast","promise","pending","success","render","_ref","data","_ref2","htmlFor","autoComplete","type","id","onChange","placeholder","onClick","handleLoginRedirect","onMouseEnter","onMouseLeave","RegisterPage"],"sourceRoot":""}